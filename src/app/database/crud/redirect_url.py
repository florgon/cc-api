"""
    RedirectUrl CRUD utils for the database.
    Copyright (C) 2022-2023 Stepan Zubkov <stepanzubkov@florgon.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
from flask import current_app
from flask_sqlalchemy import SQLAlchemy
from hashids import Hashids

from app.database.models.url import RedirectUrl


def create_url(
    db: SQLAlchemy,
    redirect_url: str,
    stats_is_public: bool = False,
    owner_id: int | None = None,
) -> RedirectUrl:
    """
    Creates new shortened url in database.
    :param SQLAlchemy db: database object
    :param str redirect_url: long url for redirecting
    :param int | None owner_id: id of local user
    :return: created url object
    :rtype: RedirectUrl
    """
    if not redirect_url.startswith("http://") and not redirect_url.startswith(
        "https://"
    ):
        # Add protocol for valid redirecting to an external domain
        redirect_url = "https://" + redirect_url

    url = RedirectUrl(
        redirect=redirect_url,
        stats_is_public=stats_is_public,
        owner_id=owner_id,
    )

    db.session.add(url)
    db.session.commit()
    db.session.refresh(url)

    return url


def get_all() -> list[RedirectUrl]:
    """
    Returns all URLs from the database.
    :return: List with URLs.
    :rtype: List of the urls.
    """
    return RedirectUrl.query.all()


def get_by_owner_id(owner_id: int) -> list[RedirectUrl]:
    """
    Returns all URLs with owner ID from the database.
    :return: List with URLs.
    :rtype: List of the urls.
    """
    return RedirectUrl.query.filter_by(owner_id=owner_id)


def get_by_hash(url_hash: str, only_active: bool = True) -> RedirectUrl | None:
    """
    Get shortened url from database by hash generated by hashids.
    Decodes hash and get url from database by decoded id.
    :param SQLAlchemy db: database object
    :param str url_hash: hashids hash
    :param bool only_active: search url from active (with is_deleted = False) urls
    :return: url object
    :rtype: RedirectUrl or None if hash is invalid
    """
    hashids = Hashids(salt=current_app.config["HASHIDS_SALT"], min_length=6)
    url_ids: tuple[int] = hashids.decode(url_hash)
    if len(url_ids) != 1:
        return None
    url_id = url_ids[0]
    url = RedirectUrl.query.filter_by(id=url_id)
    if only_active:
        url = url.filter_by(is_deleted=False)
    return url.first()


def delete(db: SQLAlchemy, url: RedirectUrl) -> None:
    """
    Deletes url and views.
    :param SQLAlchemy db: database object
    :param RedirectUrl url: url object
    """
    url.is_deleted = True
    db.session.commit()
